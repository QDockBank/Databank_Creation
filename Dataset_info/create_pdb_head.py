# --*-- conding:utf-8 --*--
# @time:4/24/25 08:28
# @Author : Yuqi Zhang
# @Email : yzhan135@kent.edu
# @File:create_pdb_head.py


"""
Prepend a standardized PDB header to every .pdb file in all subdirectories.

This script will walk through the 'QDockBank' directory, find every .pdb file,
and insert the following header block at the very top:

HEADER    QDOCKBANK DATASET                    25-MAR-25
REMARK   1 DATASET: QDockBank
REMARK   2 CREATION DATE: 2025-03-25
REMARK   3 BACKBONE PREDICTION: VQE (EfficientSU2 ansatz)
REMARK   4 ATOMIC COORDINATES: OpenBabel
REMARK   5 IBM QUANTUM BACKEND: IBM Quantum Eagle (127 qubits)
SOURCE    GENERATED BY QDockBank v1.0

Usage:
    python prepend_pdb_header.py
"""

import os
from pathlib import Path

# Define the header block to prepend (each line must end with a newline)
HEADER_BLOCK = "\n".join([
    "HEADER    QDOCKBANK DATASET                    25-MAR-25",
    "REMARK   1 DATASET: QDockBank",
    "REMARK   2 CREATION DATE: 2025-03-25",
    "REMARK   3 BACKBONE PREDICTION: VQE (EfficientSU2 ansatz)",
    "REMARK   4 ATOMIC COORDINATES: OpenBabel",
    "REMARK   5 IBM QUANTUM BACKEND: IBM Quantum Eagle (127 qubits)",
    "SOURCE    GENERATED BY QDockBank v1.0",
    ""  # blank line to separate header from ATOM records
]) + "\n"

def prepend_header(pdb_path: Path, header: str):
    """
    Read the existing PDB file, then overwrite it with the header
    followed by the original content.
    """
    original = pdb_path.read_text()
    pdb_path.write_text(header + original)
    print(f"Prepended header to {pdb_path}")

def main():
    base_dir = Path("QDockBank")
    if not base_dir.is_dir():
        print(f"Error: base directory '{base_dir}' not found.")
        return

    # Recursively find all .pdb files
    for pdb_file in base_dir.rglob("*.pdb"):
        prepend_header(pdb_file, HEADER_BLOCK)

if __name__ == "__main__":
    main()

